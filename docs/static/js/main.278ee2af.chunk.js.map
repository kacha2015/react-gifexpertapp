{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAuCeA,EApCK,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkBxC,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAO,OACPC,SAlBa,SAAEN,GACvBF,EAAcE,EAAEO,OAAOC,QAkBfA,MAAUX,O,QCxBbY,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACjC,OACI,sBAAKC,UAAW,yCAAhB,UACI,qBAAKC,IAAQF,EAAMG,IAAQJ,IAC3B,kCAAMA,S,uBCNLK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAaZY,GAbY,4CAAH,sDCKPM,EAAU,SAAC,GAAmB,IAAhBb,EAAe,EAAfA,SAAe,ECFd,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAU,WACPlB,EAASC,GACRkB,MAAO,SAAAC,GACHC,YAAY,WACRJ,EAAU,CACNV,KAAMa,EACNL,SAAS,MAGd,UAGR,CAACd,IAEGe,EDjB0BM,CAAcrB,GAAlCW,EAFyB,EAE9BL,KAAaQ,EAFiB,EAEjBA,QAErB,OACI,qCAEI,6BAAMd,IAEN,sBAAKJ,UAAU,YAAf,UAEMkB,GAAW,0CAGLH,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADGA,EAAIC,cEWzBY,EA5BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAKvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAGA,6BAEQ4C,EAAWf,KAAK,SAAAR,GAAQ,OAErB,cAAC,EAAD,CAEKA,SAAaA,GADLA,Y,MChBpCwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.278ee2af.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategories }) => {\r\n\r\nconst [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputValue = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n     \r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n      \r\n    }\r\n\r\n    return (  \r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type = \"text\"\r\n                onChange = { handleInputValue }\r\n                value = { inputValue }\r\n            ></input>\r\n\r\n        </form>\r\n\r\n\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n \r\nexport default AddCategory;","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    return (\r\n        <div className= \"card animate__animated animate__bounce\">\r\n            <img src = { url } alt = { title }></img>\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=zu5LOl49yNTiY83jG5dk5fTWyhDWlj0y`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n    \r\n            <h3>{ category }</h3>\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                { loading && <p>Loading..</p> }\r\n\r\n                    {\r\n                        images.map( img  => \r\n                            <GifGridItem\r\n                            key = { img.id }\r\n                            {... img } />\r\n                    )}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n       getGifs( category )\r\n       .then ( imgs => {\r\n            setTimeout( () => {\r\n                setState ({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n            }, 3000)\r\n\r\n       })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n    return (  \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr />\r\n          \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category  => (\r\n\r\n                       <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}